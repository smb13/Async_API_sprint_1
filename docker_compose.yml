version: '3'
services:
  postgres:
    image: postgres:15
    env_file: configs/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/initial.sql:/docker-entrypoint-initdb.d/initial.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  es:
    image: elasticsearch:8.6.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: curl -s http://localhost:9200/_cluster/health?pretty | grep status | grep '\(green\|yellow\)'
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  etl:
    build: etl
    env_file: configs/.env
    environment:
      - POSTGRES_HOST=postgres
      - ELASTIC_HOST=es
      - ETL_STATE_FILE_PATH=state/storage.json
    volumes:
      - ./logs:/opt/app/logs
      - app-data:/opt/app/state
    depends_on:
      postgres:
        condition: service_healthy
      es:
        condition: service_healthy

  api:
    build: src
    env_file: configs/.env
    environment:
      - ELASTIC_HOST=es
      - REDIS_HOST=redis
      - ETL_STATE_FILE_PATH=state/storage.json
    volumes:
      - ./logs:/opt/app/logs
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      es:
        condition: service_healthy

volumes:
  postgres-data:
  es-data:
  app-data:
